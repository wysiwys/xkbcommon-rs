
// This file is autogenerated by codegen/src/keywords.rs
/*
 * Copyright Â© 2024 wysiwys
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 */

use crate::lexer::Token;
use unicase::*;

pub(crate) static KEYWORDS: phf::OrderedMap<UniCase<&'static str>, Token> = ::phf::OrderedMap {
    key: 7485420634051515786,
    disps: &[
        (5, 33),
        (5, 1),
        (0, 29),
        (1, 5),
        (1, 24),
        (2, 29),
        (39, 31),
        (11, 0),
        (2, 28),
    ],
    idxs: &[
        13,
        32,
        37,
        7,
        29,
        4,
        6,
        11,
        39,
        25,
        18,
        28,
        19,
        20,
        0,
        27,
        41,
        30,
        21,
        26,
        31,
        9,
        33,
        5,
        24,
        38,
        15,
        36,
        17,
        14,
        42,
        1,
        12,
        3,
        40,
        22,
        35,
        2,
        10,
        8,
        43,
        16,
        34,
        44,
        23,
    ],
    entries: &[
        (UniCase::unicode("action"), Token::ActionTok),
        (UniCase::unicode("alias"), Token::Alias),
        (UniCase::unicode("alphanumeric_keys"), Token::AlphanumericKeys),
        (UniCase::unicode("alternate_group"), Token::AlternateGroup),
        (UniCase::unicode("alternate"), Token::Alternate),
        (UniCase::unicode("augment"), Token::Augment),
        (UniCase::unicode("default"), Token::Default),
        (UniCase::unicode("function_keys"), Token::FunctionKeys),
        (UniCase::unicode("group"), Token::Group),
        (UniCase::unicode("hidden"), Token::Hidden),
        (UniCase::unicode("include"), Token::Include),
        (UniCase::unicode("indicator"), Token::Indicator),
        (UniCase::unicode("interpret"), Token::Interpret),
        (UniCase::unicode("keypad_keys"), Token::KeypadKeys),
        (UniCase::unicode("key"), Token::Key),
        (UniCase::unicode("keys"), Token::Keys),
        (UniCase::unicode("logo"), Token::Logo),
        (UniCase::unicode("modifier_keys"), Token::ModifierKeys),
        (UniCase::unicode("modifier_map"), Token::ModifierMap),
        (UniCase::unicode("mod_map"), Token::ModifierMap),
        (UniCase::unicode("modmap"), Token::ModifierMap),
        (UniCase::unicode("outline"), Token::Outline),
        (UniCase::unicode("overlay"), Token::Overlay),
        (UniCase::unicode("override"), Token::Override),
        (UniCase::unicode("partial"), Token::Partial),
        (UniCase::unicode("replace"), Token::Replace),
        (UniCase::unicode("row"), Token::Row),
        (UniCase::unicode("section"), Token::Section),
        (UniCase::unicode("shape"), Token::Shape),
        (UniCase::unicode("solid"), Token::Solid),
        (UniCase::unicode("text"), Token::Text),
        (UniCase::unicode("type"), Token::Type),
        (UniCase::unicode("virtual_modifiers"), Token::VirtualMods),
        (UniCase::unicode("virtual"), Token::Virtual),
        (UniCase::unicode("xkb_compatibility_map"), Token::XkbCompatmap),
        (UniCase::unicode("xkb_compatibility"), Token::XkbCompatmap),
        (UniCase::unicode("xkb_compat_map"), Token::XkbCompatmap),
        (UniCase::unicode("xkb_compat"), Token::XkbCompatmap),
        (UniCase::unicode("xkb_geometry"), Token::XkbGeometry),
        (UniCase::unicode("xkb_keycodes"), Token::XkbKeycodes),
        (UniCase::unicode("xkb_keymap"), Token::XkbKeymap),
        (UniCase::unicode("xkb_layout"), Token::XkbLayout),
        (UniCase::unicode("xkb_semantics"), Token::XkbSemantics),
        (UniCase::unicode("xkb_symbols"), Token::XkbSymbols),
        (UniCase::unicode("xkb_types"), Token::XkbTypes),
    ],
}
;

